(function(){var t,n,i,r,u;i=function(n,t,i){this.title=ko.observable(n),this.message=ko.observable(t),this.severity=ko.observable(i!=null?i:"alert alert-error")},r=function(n){ko.mapping.fromJS(n,{},this),this.files=ko.observableArray()},u=function(n){ko.mapping.fromJS(n,{},this),this.badgeStatus=ko.computed(function(){switch(this.status()){case"added":return"badge badge-success";case"modified":return"badge badge-info";case"removed":return"badge badge-important";default:return"badge"}},this)},n=function(n,t,r){viewModel.alerts.push(new i(n,t,r))},t=function(){var t;return t=this,t.repoName=ko.observable(),t.commits=ko.observableArray(),t.alerts=ko.observableArray(),t.getCommits=function(){var i,u,f=this;if(!((u=t.repoName())!=null?u.length:void 0)){n("Please specify a repository");return}return i="https://api.github.com/repos/"+t.repoName()+"/commits",$.get(i).done(function(n){var i;return i={commit:{create:function(n){return new r(n.data)}}},ko.mapping.fromJS(n,i,t.commits)}).fail(function(t){return n("Error when fetching commits!",t.statusText)})},t.getFiles=function(i){var r;if(!i.commit.files.length)return r="https://api.github.com/repos/"+t.repoName()+"/commits/"+i.sha(),$.get(r).done(function(n){var t;return t={files:{create:function(n){return new u(n.data)}}},ko.mapping.fromJS(n,t,i.commit)}).fail(function(t){return n("Error when fetching files!",t.statusText)})},this},$(function(){window.viewModel=new t,ko.applyBindings(viewModel),$("#repoName").tooltip({title:"Format: <username>/<reponame>"})})}).call(this)